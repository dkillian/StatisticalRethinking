---
title: "Statistical Rethinking"
subtitle: "Chapter 4 - Geocentric Models"
author: "Dan Killian notes"
date: "11/19/2022"
toc: true
toc-depth: 3
number-sections: false
format: 
  html:
    code-fold: true
editor: visual
---

```{r global_options, include=F, warning=F, message=F, echo=F, error=F}

# standard figure size and generate clean output
knitr::opts_chunk$set(autodep=T, fig.height=4, fig.width=6, warning=FALSE, message=FALSE, cache=TRUE, error=T, echo=T)

library(here)
source("prep.R")

```

Ptolemy used epicycles to construct a model of the motion of planets in our solar system in which the planets and sun revolved around the Earth - a geocentric model. It was very accurate and produced good predictions, though we know now that the underlying causal model is wrong.

Linear regression is the geocentric model of applied statistics. Regardless of the underlying data generating process, it assumes that the outcome of interest can be modeled as the additive combination of other measurements. Linear regression is a descriptive model of the world that works in a lot of cases, because the normal distribution is the additive combination of other measurements, and the normal distribution can be found quite often in the physical world.

This chapter introduces linear regression as a Bayesian procedure. Since Bayesian analysis requires a probability model, we use a normal distribution to benchmark our uncertainty about some outcome of interest. Once we learn linear regression and how it is expressed as a Bayesian procedure, we can move on to other forms of regression which are not so normal.

### 4.1 Why normal distributions are normal

There are many ways to generate a normal distribution as a description of a real-world physical process. Let's start with a sequence of steps. The steps are randomly generated, and can go either left (-1) or right (1). Let's look at a sequence of 16 steps.

```{r}
set.seed(5423)
a <- sample(c(-1,1), size=16, replace=T)
a
```

Where does this path take us?

```{r}
sum(a)
```

So we got 12 steps of -1 and 8 steps of 1, resulting in a position of -8 after 16 steps. Let's see this.

```{r}
d <- data.frame(Step=0:16,
                out=c(0,a)) %>%
  mutate(Outcome=cumsum(out))

ggplot(d, aes(Step, Outcome)) + 
#  geom_segment(aes(y=0, yend=0, x=0, xend=16)) +
  geom_hline(yintercept=0, size=1.4, color="grey60", alpha=.4) +
  geom_point(color="dodgerblue2", size=3) + 
  geom_line(color="dodgerblue2", size=.75) + 
  scale_x_continuous(breaks=0:16) +
  scale_y_continuous(limits=c(-8,8),
                     breaks=-8:8) +
#  labs(y="Outcome",
#       x="Step") +
  theme(axis.title.y=element_text(angle=0, vjust=.5))
```

```{r}
pos <- replicate(1e3, sum(runif(16,-1,1)))
```
